.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  //unlike all elements iunput does not inherit font family, color so we gave it to inherit
  &__input {
    font-size: 1.5rem;
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rbga($color-white, 0.5);
    border: none;
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all 0.3s;

    //when the input is focused, it shows very bad outline and we remove it => we add a box shadow and bottom border in that case
    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, 0.1);
      border-bottom: 3px solid $color-primary;
    }

    //so chrome provides a nice validations for things like email phone and if not valid, then :invalid class is applied by vchrome => we can use it by changing
    //it => in that case border of focus can be red
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    //input also has placeholder class which we can modify according to us => color we are changing
    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  //label below the input
  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block; //otherwise we can tuse margin etc above
    transition: all 0.3s;
  }

  //now input provides a placeholder-shown class when it is shown, and it is shown when there is no text => in that case we want the label to be hidden
  //as placeholder itself says what this input is for and thus lable not needed in that case => but how do we select label when placeholder is shown bcoz
  //we cant use &__input:placeholder-shown &__label { because label is not child of input => since it is sibbling, we can use + to select a immediate next
  //sibbling => in that case we will hide the label and animate this thing by translating the input from its initial position

  //this selector we just used is called immediate/adjacent sibblign selector (sibbling meaning both element are at same level) => but let say if there were
  //more sibblings in between input and label like div etc => then we could have used ~ instead of + => In case of ~, sibbling does not have to be immeduateky
  //after the input => so ideally we could have used ~ above as well => Note that, if label was above the input, i.e. immeditaely before the input, this
  //subbling selector not works in that case
  &__input:placeholder-shown + &__label {
    opacity: 0; //we have included this just for animation purpose otherwise hidden visibility was enough
    visibility: hidden;
    transform: translateY(-4rem);
  }

  //now we will style the radio buttons which are placed in radio group so that only one of them is selected => but the thing is standard radion button input
  //cant be styled using CSS => we will create a radio button of our own and also keep the original radio button => for functionality we will use standard one
  //and for showing to the user we will show custom created one and hide standard one => so both will be tied => radion-input is standard one and radio-button
  //is ours one
  &__radio-group {
    width: 49%;
    display: inline-block;
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }
  //this is our created radio  button which is inside the radion label=>
  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%; //this will create circlee
    display: inline-block; //this we have done bcoz otherwise height and width wont work
    position: absolute;
    left: 0;
    top: -0.4rem;

    //this is a after pseudo element which is for the dot that is inside the circle in case of selection
    &::after {
      content: "";
      display: block; //since we need to give height width to it
      height: 1.3rem;
      width: 1.3rem;
      border-radius: 50%;
      position: absolute; //have to set parent label as relative but it is absolute already and this actually also works
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%); //to bring it to center
      background-color: $color-primary; //to make it solid
      opacity: 0; //initially it is not selected so dot wont show up
      transition: opacity 0.2s; //dot appear or going away should happen through animation
    }
  }

  //so when the original radio button is checked, in that case, find a sibbling radio label and it has a radio button as child, take the after element of button which is
  //the dot inside the our custom radion button and show it
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
  //and finally above, we will display none for the real radion buttons
  //now there is another form group having button => we should not use anchor element based button because form infers from button element for submit action
}
