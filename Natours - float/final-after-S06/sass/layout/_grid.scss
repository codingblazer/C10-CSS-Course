.row {
  max-width: $grid-width;
  margin: 0 auto;
  //so this grid width will be bigger than the viewport itself in case of tab port and thus needs to be fixed. Also earlier there were 4 cols or 4 grids
  //but on mobile we will make them vertical i.e. one grid in a row => padding adjusted
  @include respond(tab-port) {
    max-width: 50rem;
    padding: 0 3rem;
  }

  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
    //making the gutter smaller => in browser, before making this change, we have already made global base.scss media query change and even after that if
    //something is wierd, we do more scale down etc => making gutter smaller than what global media query did
    @include respond(tab-port) {
      margin-bottom: $gutter-vertical-small;
    }
  }

  @include clearfix;

  [class^="col-"] {
    float: left;

    &:not(:last-child) {
      margin-right: $gutter-horizontal;

      @include respond(tab-port) {
        margin-right: 0;
        margin-bottom: $gutter-vertical-small;
      }
    }
    //like told above that we are making for mobile, each col to take the full width instead of 4 cols in one row which is more suited for desktop
    @include respond(tab-port) {
      width: 100% !important;
    }
  }

  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
  }

  .col-2-of-4 {
    width: calc(
      2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal}
    );
  }

  .col-3-of-4 {
    width: calc(
      3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal}
    );
  }
}
