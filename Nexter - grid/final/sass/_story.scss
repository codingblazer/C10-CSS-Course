.story {
  &__pictures {
    background-color: $color-primary;
    grid-column: full-start / col-end 4;
    background-image: linear-gradient(
        rgba($color-primary, 0.5),
        rgba($color-primary, 0.5)
      ),
      url(../img/back.jpg);
    background-size: cover;

    display: grid;
    //we are creeatring 6 by 6 grid
    grid-template-rows: repeat(6, 1fr);
    grid-template-columns: repeat(6, 1fr);
    //you will see that below image 1 is defined
    //to take given cols and rows but it will
    //actually be not taking them completely
    //this is becayse image respects it aspect ratio
    //and leaves some space as it cant be square
    //thats why we are using align items center
    //so it looks good
    align-items: center;

    //we could have used the absolute positioning
    //for this part but we just used grid

    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / -1;
      padding: 6rem;
    }
  }

  &__img--1 {
    width: 100%;
    //image 1 is taking below space
    grid-row: 2 / 6;
    grid-column: 2 / 6;
    box-shadow: 0 2rem 5rem rgba(#000, 0.1);

    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / 5;
      grid-row: 1 / -1;
    }
  }

  &__img--2 {
    width: 115%;
    grid-row: 4 / 6;
    grid-column: 4 / 7;
    z-index: 20;
    box-shadow: 0 2rem 5rem rgba(#000, 0.2);

    @media only screen and (max-width: $bp-medium) {
      grid-row: 1 / -1;
      width: 100%;
    }
  }

  &__content {
    background-color: $color-grey-light-1;
    //we are telling what out of parent cols
    //should  be given to content part
    grid-column: col-start 5 / full-end;

    //see that padding here is in viewpoer unit
    //this is becyase we want the padding to be
    //responsive => vw vh are important unit
    //for building responsive layouts
    padding: 6rem 8vw;

    //now if you see it is actually 1 d becayse
    //we have all text one after another in y direction
    //flexbox is better case i.e. the commented one
    /*
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        */

    //we can use the grid for this as well
    display: grid;
    align-content: center;
    justify-items: start;

    @media only screen and (max-width: $bp-medium) {
      grid-column: 1 / -1;
      grid-row: 5 / 6;
    }
  }

  &__text {
    font-size: 1.5rem;
    font-style: italic;
    margin-bottom: 4rem;
  }
}
