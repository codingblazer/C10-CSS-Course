//now in layout we will create simple layout having container will max width otherwise it will take full width available, header, content and sidebar where
//sidebar and hotel view are inside content
.container {
  max-width: 120rem;
  margin: 8rem auto;
  background-color: var(--color-grey-light-1);
  box-shadow: var(--shadow-dark);

  min-height: 50rem;

  @media only screen and (max-width: $bp-largest) {
    margin: 0;
    max-width: 100%;
    width: 100%;
  }
}

.header {
  font-size: 1.4rem;
  height: 7rem;
  background-color: #fff;
  border-bottom: var(--line);

  //we want the childs of this header i.e. search bar etc to align => added this
  display: flex;
  //we want the items in theis header to be space between => logo on left, middle searchbar and photo on right
  justify-content: space-between;
  //verticallt we want in center => we could use margin also but this is better
  align-items: center;

  @media only screen and (max-width: $bp-smallest) {
    flex-wrap: wrap;
    align-content: space-around;
    height: 11rem;
  }
}

.content {
  //added flex for content parent so that childs can be aligned side by side
  display: flex;

  @media only screen and (max-width: $bp-medium) {
    flex-direction: column;
  }
}

.sidebar {
  background-color: var(--color-grey-dark-1);

  //so by default flex dir in parent is row and these 2 childs will be side by side => now individual items we will change => so shrink is 0 meaning it is
  //allowed and it is now allowed to grow from defined flex basis width of 18% of parent
  flex: 0 0 18%;

  //so now inside sidebar we have 2 childs one nav link and other copyright thing and we want nav on top and then space in between and then the copyright
  //at bottom => best way to do this by using the flex direction as column and then justify content to space between => very useful thing
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.hotel-view {
  background-color: #fff;

  //we are saying that hotel view can grow as big the space is available
  flex: 1;
}

//detail has 2 childs as description and review =. left and right
//initially we gave some height to it but later we remove it after filling content
//because hright of this will depende on content
.detail {
  font-size: 1.4rem;
  display: flex;
  padding: 4.5rem;
  background-color: var(--color-grey-light-1);
  border-bottom: var(--line);

  @media only screen and (max-width: $bp-medium) {
    padding: 3rem;
  }

  @media only screen and (max-width: $bp-small) {
    flex-direction: column;
  }
}

//description takes 60% width and user review takes rest of it by growing
.description {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  flex: 0 0 60%;
  margin-right: 4.5rem;

  @media only screen and (max-width: $bp-medium) {
    padding: 2rem;
    margin-right: 3rem;
  }

  @media only screen and (max-width: $bp-small) {
    margin-right: 0;
    margin-bottom: 3rem;
  }
}

.user-reviews {
  flex: 1;

  display: flex;
  flex-direction: column;
  align-items: center;
}
